
name: Build

on: [push, pull_request]

jobs:
  build_arm64:
    runs-on: macos-14
    env:
      _PYTHON_HOST_PLATFORM: "macosx-11.0-arm64"
      ARCHFLAGS: "-arch arm64"
      MACOSX_DEPLOYMENT_TARGET: "11.0"
      CPPFLAGS: "-I/usr/local/include"
      LDFLAGS: "-L/usr/local/lib"
    strategy:
      matrix:
        python-version: [ '3.10' ] #[3.8, 3.9, 3.10, 3.11, 3.12]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'  # This will clone the submodule as well

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          brew install fontconfig freetype glfw htslib jpeg-turbo libpng xz

      - name: Checkout gw submodule at gw_dev branch
        run: |
          git submodule init
          git submodule update
          pwd
          cd gw
          git fetch origin gw_dev:gw_dev
          git checkout gw_dev
          git branch
          cd ../

      - name: Build gw submodule
        run: |
          cd ./gw
          make prep
          CPPFLAGS+="-I$(brew --Cellar)/../include" LDFLAGS+="-L$(brew --Cellar)/../lib" make shared -j3
          cp lib/libgw/out/* $(brew --Cellar)/../lib
          cd ..

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools delocate
          python -m pip install -r requirements.txt

      - name: Build wheel file
        run: |
          CPPFLAGS+="-I$(brew --Cellar)/../include" LDFLAGS+="-L$(brew --Cellar)/../lib" pip wheel . --wheel-dir dist

      - name: Delocate wheel file
        run: |
          DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$(brew --Cellar)/../lib delocate-wheel --require-archs arm64 -w dist -v dist/*.whl

      - name: Install and test wheel
        run: |
          PYTHON_VERSION=${{ matrix.python-version }}
          PYTHON_VERSION_NO_DOT=$(echo $PYTHON_VERSION | tr -d '.')
          echo $PYTHON_VERSION $PYTHON_VERSION_NO_DOT
          ls dist
          python --version
          python -m site
          python -m pip install dist/*cp${PYTHON_VERSION_NO_DOT}*.whl
          python -m pip install -U numpy
          python -c "import gwplot"

      - name: Archive wheel files
        uses: actions/upload-artifact@v3
        with:
          name: wheels_macOS_arm64
          path: dist/*.whl
  
  
#  build_intel:
#    name: Build wheels on ${{ matrix.os }}
#    env:
#      PREFIX: "/usr/local/"
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [macOS-13] #ubuntu-20.04
#
#    steps:
#      - uses: actions/checkout@v4  # checkout gwplot
#        with:
#          fetch-depth: 0
#          submodules: recursive
#      - run: cd gw; git branch; git remote show origin; git fetch origin; git switch gw_dev; cd ../  # checkout gw_dev
#      - name: Build wheels
#        uses: pypa/cibuildwheel@v2.16.0
#        env:
#          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.12"
#          CIBW_SKIP: "*-win32 *-manylinux_i686 pp* *musl* "
#          CIBW_ARCHS_MACOS: "x86_64"  # arm64
#          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=13.0 REPAIR_LIBRARY_PATH=/usr/local/lib
#          CIBW_ARCHS_LINUX: "auto"
#          CIBW_BEFORE_ALL_MACOS: |
#            bash ci/osx-build-deps
##         CIBW_BEFORE_ALL_LINUX: bash ci/manylinux-build-deps
#          CIBW_REPAIR_WHEEL_COMMAND_MACOS: DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel -w {dest_dir} -v {wheel} # --require-archs x86_64
#          #CIBW_REPAIR_WHEEL_COMMAND_LINUX: ""
##          CIBW_BEFORE_TEST_MACOS: |
##            pip install -r requirements.txt
##            pip install pillow matplotlib
##            bash ci/osx-run-deps
##          CIBW_BEFORE_TEST_LINUX: |
##            pip install -r requirements.txt
##            pip install pillow matplotlib
##            bash ci/manylinux-run-deps
#          CIBW_TEST_COMMAND:  pip install -U numpy; python -c 'import gwplot'
#          CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"
#
#      - uses: actions/upload-artifact@v3
#        with:
#          path: ./wheelhouse/*.whl
