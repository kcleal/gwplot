name: Build and Delocate Wheel

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch; adjust if necessary

jobs:
  build:
    runs-on: macos-14
    strategy:
      matrix:
        python-version: [3.10] #[3.8, 3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'  # This will clone the submodule as well

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        brew install fontconfig freetype glfw htslib jpeg-turbo libpng xz

    - name: Checkout gw submodule at gw_dev branch
      run: |
        cd gw
        git fetch origin
        git switch gw_dev
        cd ..

    - name: Build gw submodule
      run: |
        cd ./gw
        make prep
        CPPFLAGS+="-I/usr/local/include" LDFLAGS+="-L/usr/local/lib" make shared -j3
        cp lib/libgw/out/* /usr/local/lib/
        cd ..

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools delocate
        python -m pip install -r requirements.txt

    - name: Build wheel file
      run: |
        python setup.py bdist_wheel

    - name: Delocate wheel file
      run: |
        DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/usr/local/lib delocate-wheel --require-archs arm64 -w dist -v dist/*.whl

    - name: Install and test wheel
      run: |
        PYTHON_VERSION=${{ matrix.python-version }}
        PYTHON_VERSION_NO_DOT=$(echo $PYTHON_VERSION | tr -d '.')
        echo $PYTHON_VERSION $PYTHON_VERSION_NO_DOT
        ls dist
        python -m pip install dist/*cp${PYTHON_VERSION_NO_DOT}*${{ runner.os }}*.whl
        python -m pip install -U numpy
        python -c "import gwplot"

    - name: Archive wheel files
      uses: actions/upload-artifact@v3
      with:
        name: wheels_macOS_arm64
        path: dist/*.whl
