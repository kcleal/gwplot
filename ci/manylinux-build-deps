#!/bin/bash

echo "STARTING MANYLINUX-DEPS"
echo "=== Environment Variables ==="
echo "BUILD_FREETYPE: $BUILD_FREETYPE"
echo "BUILD_GLFW: $BUILD_GLFW"
echo "CPPFLAGS: $CPPFLAGS"
echo "LDFLAGS: $LDFLAGS"
echo "================================"
env
echo "================================"

yum install -y epel-release

yum -y groupinstall "Development Tools"
yum -y install kernel-headers

yum -y install gcc gcc-c++ autoconf openssl-devel libffi libffi-devel zlib-devel \
    bzip2-devel bzip2-libs xz-devel xz-libs libffi atlas-devel curl-devel \
    cmake xorg-x11-server-Xorg xorg-x11-xauth xorg-x11-apps libXcursor-devel libXi-devel libXinerama-devel \
    libxkbcommon-devel libXrandr libXrandr-devel libssh2 libs3 \
    extra-cmake-modules

yum install -y fontconfig-devel libjpeg-turbo-devel libpng-devel \
    libuuid-devel librsvg2-devel \
    libX11-devel mesa-libEGL-devel mesa-libGLES-devel \
    wayland-devel wayland-protocols-devel \
    harfbuzz brotli-devel

# GLFW
if [[ "$BUILD_GLFW" == "1" ]]; then
  curl -L -o glfw-3.4.zip https://github.com/glfw/glfw/releases/download/3.4/glfw-3.4.zip
  unzip glfw-3.4.zip > /dev/null 2>&1
  cd glfw-3.4
  #https://github.com/glfw/glfw/issues/1988
  sed -i '1i #define _POSIX_C_SOURCE 199309L' /project/glfw-3.4/src/posix_time.c
  sed -i '1i #define _GNU_SOURCE' /project/glfw-3.4/src/posix_time.c

  sed -i '1i #define _POSIX_C_SOURCE 199309L' /project/glfw-3.4/src/wl_init.c
  sed -i '1i #define _GNU_SOURCE' /project/glfw-3.4/src/wl_init.c

  # https://github.com/FlorianRhiem/pyGLFW/blob/master/Willy-JL-glfw-3.4.0-patch.diff
  sed -i '/^#include <linux\/input-event-codes.h>/d' /project/glfw-3.4/src/wl_window.c
  sed -i '1i #define _XOPEN_SOURCE 700' /project/glfw-3.4/src/linux_joystick.c
  sed -i '1i #define _GNU_SOURCE' /project/glfw-3.4/src/linux_joystick.c

  cmake -S . -B build && cd build && make
  cp ./src/libglfw3.a /usr/local/lib && cp ./src/libglfw3.a /usr/local/lib/libglfw.a
  cd ../ && ls
  cp -rf include/GLFW /usr/local/include
  ls /usr/local/include/
  ls /usr/local/include/GLFW/
  cd ../
else
  yum install -y glfw-devel
fi

# libdeflate
pwd
git clone --depth 1 https://github.com/ebiggers/libdeflate.git && \
    cd libdeflate && CFLAGS+=' -fPIC -O3 ' cmake -B build && CFLAGS+=' -fPIC -O3 ' cmake --build build
cp build/libdeflate.a /usr/local/lib && cp libdeflate.h /usr/local/include
cd ../

# htslib
pwd
curl -L -o htslib.tar.bz2 https://github.com/samtools/htslib/releases/download/1.21/htslib-1.21.tar.bz2
ls -lh
tar -xvf htslib.tar.bz2 > /dev/null 2>&1
mv htslib-1.21 htslib && rm htslib.tar.bz2
cd htslib
./configure --enable-libcurl --enable-s3 --enable-lzma --enable-bz2 --with-libdeflate
make -j3 && make install
cd ../

if [[ "$BUILD_FREETYPE" == "1" ]]; then

  curl -L -o freetype.tar.xz https://download.savannah.gnu.org/releases/freetype/freetype-2.13.3.tar.xz
  ls -lh
  tar -xvf freetype.tar.xz > /dev/null 2>&1 && rm freetype.tar.xz
  cd freetype*

  # Build static version
  ./configure --prefix=/usr/local --enable-freetype-config --enable-static --disable-shared
  make clean && make -j3 && make install

  # Then build shared version for auditwheel to potentially pick up
#  ./configure --prefix=/usr --enable-freetype-config --disable-static --enable-shared
#  make clean && make -j3 && make install

  # Make sure the static library is available for linking
  cp /usr/local/lib/libfreetype.a /usr/local/lib/

  cd ../

  # Force statically compiled freetype
  sed -i 's/-lfreetype/\/usr\/local\/lib\/libfreetype.a/g' gw/Makefile

else
  yum install -y freetype-devel
fi

pwd
ls

# libgw
cd ./gw
make prep > /dev/null 2>&1
make shared -j3
cp libgw/*.* /usr/local/lib
cp libgw/libskia.a ../gwplot/
cp -rf libgw/GW /usr/local/include
cd ../
ls -lh /usr/local/lib/libgw*
ls -lh /usr/local/lib/libskia.a
ls -lh /usr/local/include/GW
pwd
ls -lh ./gwplot

echo "MANYLINUX-DEPS DONE"
